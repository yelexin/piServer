# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      PI_SSH_KEY: ${{ secrets.PI_SSH_KEY }}
    steps:
      - uses: actions/checkout@v2
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: "npm"
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Build artifact
        id: build
        with:
          arch: armv7
          distro: bullseye
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts" --volume "${PWD}":/repo
          install: |
            curl -fsSL https://deb.nodesource.com/setup_16.x | bash - > /dev/null 2>&1
            apt update -q -y
            apt-get install -q -y nodejs npm
          run: |
            ln -s /usr/bin/python3 /usr/bin/python
            cd /repo
            npm install --silent
            npm run build:prod --if-present
            cp ./package.json ./dist
            cp -r ./node_modules ./dist
            cp -r ./dist /artifacts/
            echo "Produced artifact at /artifacts/dist"
      - run: tar zcvf dist.tar.gz -C ${PWD}/artifacts/ dist
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PI_SSH_KEY }}
          name: pi # optional
          known_hosts: ${{ secrets.PI_SSH_KNOWN_HOST }}
          config: ${{ secrets.PI_SSH_CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - run: "scp -P 10010 dist.tar.gz pi:~/apps/piServer"
      # - run: "scp -P 10010 package.json pi:~/apps/piServer/dist"
      - run: ssh -p 10010 pi "rm -rf ~/apps/piServer/dist && cd ~/apps/piServer && tar -zxvf dist.tar.gz && rm -rf dist.tar.gz && pm2 restart piServer"
