# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      PI_SSH_KEY: ${{ secrets.PI_SSH_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # - run: npm install
    # - run: npm run build:prod --if-present
    # - run: tar zcvf src.tar.gz ./dist/src
    - run: TMP_FILE=`mktemp`
    - run: mktemp
    - run: echo $TMP_FILE
    - run: echo $PI_SSH_KEY > $TMP_FILE
    # - run: "scp -P 10010 -i $TMP_FILE src.tar.gz pi@pi.yelexin.cn:~/apps/piServer"
    # - run: "scp -P 10010 -i $TMP_FILE package.json pi@pi.yelexin.cn:~/apps/piServer/dist"
    # - run: ssh -p 10010 -i $TMP_FILE -f pi@pi.yelexin.cn "rm -rf ~/apps/piServer/dist/src && tar -C ~/apps/piServer/dist xf ~/apps/piServer/src.tar.gz && cd ~/apps/piServer/dist && npm install --only=prod && pm2 restart piServer"
